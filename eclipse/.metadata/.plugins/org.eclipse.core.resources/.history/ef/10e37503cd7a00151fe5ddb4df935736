package com.derf.ei.tileentity;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.util.ChatComponentText;

import com.derf.ei.multiblock.EIMultiBlockFactory;
import com.derf.ei.multiblock.IMultiBlock;


public class EITileEntityMachineCore extends EITileEntity {
	// Totem Section
	// Fire Totem
	public static final int FIRE_TOTEM = 0;
	// Water Totem
	public static final int WATER_TOTEM = 1;
	// Air Totem
	public static final int AIR_TOTEM = 2;
	// Earth Totem
	public static final int EARTH_TOTEM = 3;
	// Void Totem
	public static final int VOID_TOTEM = 4;
	// Generator Section
	// Cobblestone Generator
	public static final int COBBLE_STONE_GENERATOR = 5;
	// Dirt Generator
	public static final int DIRT_GENERATOR = 6;
	// Sand Generator
	public static final int SAND_GENERATOR = 7;
	// Max Size
	public static final int MB_SIZE = 8;
	
	private int mode = FIRE_TOTEM;
	
	private IMultiBlock multiBlock = EIMultiBlockFactory.createMultiBlock(FIRE_TOTEM);
	
	
	@Override
	public void updateEntity() {
		// TODO Auto-generated method stub
		super.updateEntity();
		
		if(!worldObj.isRemote) {
			
			
			if(multiBlock != null) {
				multiBlock.update(worldObj, xCoord, yCoord, zCoord);
			}
		}
	}

	public int getMode() {
		return mode;
	}

	public void setMode(int mode) {
		this.mode = mode;
		this.multiBlock = EIMultiBlockFactory.createMultiBlock(this.mode);
	}
	
	public void toggleMode() {
		if(mode < MB_SIZE) {
			this.setMode(this.getMode() + 1);
		} else {
			this.setMode(FIRE_TOTEM);
		}
	}
	
	public void printType(EntityPlayer player) {
		
		switch(mode) {
		case FIRE_TOTEM:
			player.addChatComponentMessage(new ChatComponentText("Machine Core Configuration: Currently set to Fire Totem."));
			break;
		case WATER_TOTEM:
			player.addChatComponentMessage(new ChatComponentText("Machine Core Configuration: Currently set to Water Totem."));
			break;
		case AIR_TOTEM:
			player.addChatComponentMessage(new ChatComponentText("Machine Core Configuration: Currently set to Air Totem."));
			break;
		case EARTH_TOTEM:
			player.addChatComponentMessage(new ChatComponentText("Machine Core Configuration: Currently set to Earth Totem."));
			break;
		case VOID_TOTEM:
			player.addChatComponentMessage(new ChatComponentText("Machine Core Configuration: Currently set to Void Totem."));
			break;
		case COBBLE_STONE_GENERATOR:
			player.addChatComponentMessage(new ChatComponentText("Machine Core Configuration: Currently set to Cobblestone Generator."));
			break;
		case DIRT_GENERATOR:
			player.addChatComponentMessage(new ChatComponentText("Machine Core Configuration: Currently set to Dirt Generator."));
			break;
		case SAND_GENERATOR:
			player.addChatComponentMessage(new ChatComponentText("Machine Core Configuration: Currently set to Sand Generator."));
			break;
		}
	}

	@Override
	public void readFromNBT(NBTTagCompound compound) {
		// TODO Auto-generated method stub
		super.readFromNBT(compound);
		// Grab mode from NBT Compound
		this.setMode(compound.getInteger("mode"));
		// This section will be for the multiblock interface
		if(multiBlock != null) {
			multiBlock.readFromNBT(compound);
		}
	}

	@Override
	public void writeToNBT(NBTTagCompound compound) {
		// TODO Auto-generated method stub
		super.writeToNBT(compound);
		// Add mode to NBT Compound
		compound.setInteger("mode", this.getMode());
		// This section will save the data to the 
		// NBT multiblock interface
		if(multiBlock != null) {
			multiBlock.writeToNBT(compound);
		}
	}
	
	
}
